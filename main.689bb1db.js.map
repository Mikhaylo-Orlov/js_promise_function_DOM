{"version":3,"sources":["scripts/main.js"],"names":["notification","document","createElement","form","querySelector","waitFor","element","eventName","Promise","resolve","addEventListener","message","nodeName","id","append","printMessage","classList","innerText","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAeC,SAASC,cAAc,OACtCC,EAAOF,SAASG,cAAc,QAIpC,SAASC,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAoBH,GAAAA,OAAAA,GAAa,WACjCI,IAAAA,EAAoBJ,UAAAA,OAAAA,EACxBD,6BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,KAGAJ,EAAQE,OARdR,EAAKW,OAAOd,GAaZ,IAAMe,EAAe,SAACJ,GACpBX,EAAagB,UAAY,UACzBhB,EAAaiB,UAAYN,GAG3BO,OAAOC,QAAU,CACfd,QAAAA,EACAU,aAAAA","file":"main.689bb1db.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst notification = document.createElement('div');\nconst form = document.querySelector('form');\n\nform.append(notification);\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(`${eventName}`, () => {\n      const message = `It was ${eventName} on the element: \n      ${element.nodeName}, id: ${element.id}.`;\n\n      resolve(message);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  notification.classList = 'message';\n  notification.innerText = message;\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}